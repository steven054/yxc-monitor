name: 微信定时发送监控报告

on:
  # 定时执行 - 每天北京时间早上7点执行
  schedule:
    - cron: '0 23 * * *'  # UTC时间23:00 = 北京时间07:00
  
  # 手动触发
  workflow_dispatch:
    inputs:
      test_mode:
        description: '测试模式（不发送微信）'
        required: false
        default: 'false'
        type: boolean

jobs:
  send-wechat-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 安装依赖和字体
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install matplotlib
        
        # 安装中文字体支持
        sudo apt-get update
        sudo apt-get install -y fonts-wqy-microhei fonts-wqy-zenhei
        sudo apt-get install -y fonts-noto-cjk
        
        # 清除matplotlib字体缓存
        python -c "import matplotlib.font_manager as fm; fm.fontManager.__init__()"
        
    - name: 创建环境变量文件
      run: |
        echo "WECHAT_WEBHOOK_URL=${{ secrets.WECHAT_WEBHOOK_URL }}" > .env
        echo "TEST_MODE=${{ github.event.inputs.test_mode || 'false' }}" >> .env
        
    - name: 执行微信发送脚本
      run: |
        echo "开始执行微信发送脚本..."
        python3 wechat_with_image_fix.py
        
    - name: 上传执行日志
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: wechat-execution-logs-${{ github.run_number }}
        path: |
          *.log
          *.png
        retention-days: 7
        
    - name: 发送执行结果通知
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ 微信发送任务执行成功"
        else
          echo "❌ 微信发送任务执行失败"
        fi
